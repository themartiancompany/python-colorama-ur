From b29cb9231bacd87a16f947b945708bfac99b33a0 Mon Sep 17 00:00:00 2001
From: Daniel Hahler <git@thequod.de>
Date: Fri, 22 Jan 2016 22:54:52 +0100
Subject: [PATCH] Check for 'closed' attribute on 'wrapped' in AnsiToWin32

---
 colorama/ansitowin32.py            | 8 ++++++--
 colorama/tests/ansitowin32_test.py | 5 ++++-
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/colorama/ansitowin32.py b/colorama/ansitowin32.py
index a750d2a..0698eba 100644
--- a/colorama/ansitowin32.py
+++ b/colorama/ansitowin32.py
@@ -64,12 +64,16 @@ def __init__(self, wrapped, convert=None, strip=None, autoreset=False):
 
         # should we strip ANSI sequences from our output?
         if strip is None:
-            strip = conversion_supported or (not wrapped.closed and not is_a_tty(wrapped))
+            strip = conversion_supported or (
+                hasattr(wrapped, 'closed') and not wrapped.closed and not
+                is_a_tty(wrapped))
         self.strip = strip
 
         # should we should convert ANSI sequences into win32 calls?
         if convert is None:
-            convert = conversion_supported and not wrapped.closed and is_a_tty(wrapped)
+            convert = (conversion_supported and
+                       hasattr(wrapped, 'closed') and not
+                       wrapped.closed and is_a_tty(wrapped))
         self.convert = convert
 
         # dict of ansi codes to win32 functions and parameters
diff --git a/colorama/tests/ansitowin32_test.py b/colorama/tests/ansitowin32_test.py
index f351763..5ba96d0 100644
--- a/colorama/tests/ansitowin32_test.py
+++ b/colorama/tests/ansitowin32_test.py
@@ -166,7 +166,10 @@ def test_reset_all_shouldnt_raise_on_closed_orig_stdout(self):
     def test_wrap_shouldnt_raise_on_closed_orig_stdout(self):
         stream = StringIO()
         stream.close()
-        converter = AnsiToWin32(stream)
+        AnsiToWin32(stream)
+
+    def test_wrap_shouldnt_raise_on_missing_closed_attrib(self):
+        AnsiToWin32(object())
 
     def testExtractParams(self):
         stream = AnsiToWin32(Mock())
